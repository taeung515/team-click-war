# 워크플로우 이름: dev 브랜치 PR 시 빌드/테스트 자동 실행
name: CI/CD - Pull Request & Deploy to dev

# 실행 시마다 표시될 실행 제목
run-name: ${{ github.actor }} has opened a PR to dev

# 이 워크플로우는 dev 브랜치로의 PR 생성 시 실행되고, push 시 배포도 수행
on:
  pull_request:
    branches: [ dev ]
  push:
    branches: [ dev ]

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest  # GitHub에서 제공하는 Ubuntu 서버에서 실행

    # 모든 명령은 LectureFlow 폴더에서 실행됨
    defaults:
      run:
        working-directory: LectureFlow

    steps:
      # 레포지토리 코드 가져오기
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Java 17 환경 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # Gradle 빌드 수행
      - name: Build with Gradle
        run: ./gradlew build

      # 단위 테스트 실행
      - name: 테스트 실행
        run: ./gradlew test

      # 빌드된 JAR 파일 업로드 (CD 단계에서 사용하기 위함)
      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: app
          path: LectureFlow/build/libs/app.jar


  # CD(배포) 구축
  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push'

    steps:
      # 레포지토리 코드 가져오기
      - name: Checkout Repository
        uses: actions/checkout@v4

      # EC2 SSH 키 설정
      - name: Set up SSH Key
        run: |
          echo "${{ secrets.EC2_PRIVATE_KEY }}" > ec2_key.pem
          chmod 400 ec2_key.pem

      # 빌드 job에서 업로드한 JAR 파일 다운로드
      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: app

      # 디버깅용 - 실제로 파일 있는지 확인
      - name: Show contents of jar directory
        run: ls -al

      # EC2 서버에 jar 배포 및 실행
      - name: Deploy to EC2 SSH
        run: |
          scp -i ec2_key.pem -o StrictHostKeyChecking=no app.jar ubuntu@${{ secrets.EC2_HOST }}:/home/ubuntu/app.jar
          ssh -i ec2_key.pem -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
            chmod +x /home/ubuntu/start.sh
            /home/ubuntu/start.sh
          EOF
